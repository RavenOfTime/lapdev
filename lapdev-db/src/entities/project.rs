//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "project")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub created_at: DateTimeWithTimeZone,
    pub deleted_at: Option<DateTimeWithTimeZone>,
    pub name: String,
    pub organization_id: Uuid,
    pub created_by: Uuid,
    pub oauth_id: Uuid,
    pub repo_url: String,
    pub repo_name: String,
    pub machine_type_id: Uuid,
    pub osuser: String,
    pub host_id: Uuid,
    pub env: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::machine_type::Entity",
        from = "Column::MachineTypeId",
        to = "super::machine_type::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    MachineType,
    #[sea_orm(has_many = "super::prebuild::Entity")]
    Prebuild,
}

impl Related<super::machine_type::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::MachineType.def()
    }
}

impl Related<super::prebuild::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Prebuild.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
